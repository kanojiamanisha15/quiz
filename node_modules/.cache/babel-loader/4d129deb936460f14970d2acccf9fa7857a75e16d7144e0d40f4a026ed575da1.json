{"ast":null,"code":"var _jsxFileName = \"/Users/sonuyadav/Desktop/monunewquiz/quiz/src/QuestionPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { QuestionsCouple, QuestionsFriends } from './QuestionList';\nimport QA from './QA';\nimport { useLocation } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuestionPage() {\n  _s();\n  const location = useLocation();\n  let {\n    name\n  } = useParams();\n  let questions;\n  if (name == 'friends') {\n    questions = QuestionsFriends.questions;\n  } else if (name == 'couples') {\n    questions = QuestionsCouple.questions;\n  } else {\n    questions = QuestionsCouple.questions;\n  }\n\n  // console.log(QuestionsFriends.questions, location.state.list);\n  const handleQuestionChange = (id, value) => {\n    let newArr = questions.map(question => question.id === id ? {\n      ...question,\n      question: value\n    } : question);\n    questions = newArr;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questions-holder\",\n      children: questions.map(question => /*#__PURE__*/_jsxDEV(QA, {\n        ques: question,\n        x: handleQuestionChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(QuestionPage, \"bNx6VFVDGl7hwmyMTPH4JWaIiOg=\", false, function () {\n  return [useLocation, useParams];\n});\n_c = QuestionPage;\nexport default QuestionPage;\nvar _c;\n$RefreshReg$(_c, \"QuestionPage\");","map":{"version":3,"names":["React","QuestionsCouple","QuestionsFriends","QA","useLocation","useParams","jsxDEV","_jsxDEV","QuestionPage","_s","location","name","questions","handleQuestionChange","id","value","newArr","map","question","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ques","x","type","_c","$RefreshReg$"],"sources":["/Users/sonuyadav/Desktop/monunewquiz/quiz/src/QuestionPage.js"],"sourcesContent":["import React from 'react'\nimport { QuestionsCouple, QuestionsFriends } from './QuestionList'\nimport QA from './QA'\nimport { useLocation } from 'react-router-dom'\nimport { useParams } from 'react-router-dom';\nfunction QuestionPage() {       \n\n    const location = useLocation();\n    let { name } = useParams();\n    let questions\n \n \n\nif(name == 'friends') {\n    questions = QuestionsFriends.questions\n}else if (name == 'couples'){\n    questions = QuestionsCouple.questions\n}else{\n    questions = QuestionsCouple.questions\n}\n\n// console.log(QuestionsFriends.questions, location.state.list);\nconst handleQuestionChange = (id ,value) => {\nlet newArr = questions.map(question => question.id === id ? {...question,question : value}: question)\n\nquestions = newArr\n}\n\nreturn (\n    <div className=\"quiz-container\">\n        <h1>Quiz</h1>\n        <div className='questions-holder'>\n            \n            {questions.map((question) => (\n                    <QA ques={question} x={handleQuestionChange} />\n                ))}\n              \n            </div>\n        <button type='submit'>Submit</button>\n    </div>\n)\n}\n\nexport default QuestionPage"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,EAAEC,gBAAgB,QAAQ,gBAAgB;AAClE,OAAOC,EAAE,MAAM,MAAM;AACrB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC7C,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EAEpB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,IAAI;IAAEO;EAAK,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B,IAAIO,SAAS;EAIjB,IAAGD,IAAI,IAAI,SAAS,EAAE;IAClBC,SAAS,GAAGV,gBAAgB,CAACU,SAAS;EAC1C,CAAC,MAAK,IAAID,IAAI,IAAI,SAAS,EAAC;IACxBC,SAAS,GAAGX,eAAe,CAACW,SAAS;EACzC,CAAC,MAAI;IACDA,SAAS,GAAGX,eAAe,CAACW,SAAS;EACzC;;EAEA;EACA,MAAMC,oBAAoB,GAAGA,CAACC,EAAE,EAAEC,KAAK,KAAK;IAC5C,IAAIC,MAAM,GAAGJ,SAAS,CAACK,GAAG,CAACC,QAAQ,IAAIA,QAAQ,CAACJ,EAAE,KAAKA,EAAE,GAAG;MAAC,GAAGI,QAAQ;MAACA,QAAQ,EAAGH;IAAK,CAAC,GAAEG,QAAQ,CAAC;IAErGN,SAAS,GAAGI,MAAM;EAClB,CAAC;EAED,oBACIT,OAAA;IAAKY,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3Bb,OAAA;MAAAa,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbjB,OAAA;MAAKY,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAE5BR,SAAS,CAACK,GAAG,CAAEC,QAAQ,iBAChBX,OAAA,CAACJ,EAAE;QAACsB,IAAI,EAAEP,QAAS;QAACQ,CAAC,EAAEb;MAAqB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACjD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED,CAAC,eACVjB,OAAA;MAAQoB,IAAI,EAAC,QAAQ;MAAAP,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEV;AAACf,EAAA,CApCQD,YAAY;EAAA,QAEAJ,WAAW,EACbC,SAAS;AAAA;AAAAuB,EAAA,GAHnBpB,YAAY;AAsCrB,eAAeA,YAAY;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}