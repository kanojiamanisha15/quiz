{"ast":null,"code":"var _jsxFileName = \"/Users/sonuyadav/Desktop/monunewquiz/quiz/src/QuizEntry.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Button, Form, Input, message, Space } from 'antd';\nimport { useNavigate } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction QuizEntry() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [form] = Form.useForm();\n  const onFinish = () => {\n    if (location.state.h1 === 'Best Friend') {\n      navigate('/quiz-entry/friends', {\n        state: {\n          list: 'QuestionsFriends'\n        }\n      });\n    }\n    if (location.state.h1 === 'Couple') {\n      navigate('/quiz-entry/couples', {\n        state: {\n          list: 'QuestionsCouple'\n        }\n      });\n    }\n  };\n  const onFinishFailed = () => {\n    message.error('Please enter name');\n  };\n  // console.log(\"helloworld\")\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        width: '40%',\n        style: {\n          margin: '20px'\n        },\n        src: location.state.src\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          margin: '10px',\n          fontFamily: 'cursive'\n        },\n        children: [location.state.h1, \" Quiz\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          margin: '10px',\n          fontFamily: 'cursive'\n        },\n        children: [\"How well do your \", location.state.h2, \" know you?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      layout: \"vertical\",\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      autoComplete: \"off\",\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"name\",\n        label: \"What is your name?\",\n        rules: [{\n          required: true\n        }, {\n          type: 'name'\n        }, {\n          type: 'string',\n          min: 1\n        }],\n        style: {\n          width: '500px',\n          textAlign: 'center',\n          fontStyle: 'inherit'\n        },\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Enter your name\",\n          style: {\n            fontFamily: 'cursive'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Space, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            style: {\n              width: '500px',\n              fontFamily: 'cursive'\n            },\n            children: \"Get Started\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      style: {\n        textAlign: 'start',\n        width: '25%',\n        fontFamily: 'cursive'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Create your own quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Share it with your \", location.state.h2]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: location.state.h3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(QuizEntry, \"mYMe2SianYkqqFnSNKQ8VG+ffk8=\", false, function () {\n  return [useLocation, useNavigate, Form.useForm];\n});\n_c = QuizEntry;\nexport default QuizEntry;\nvar _c;\n$RefreshReg$(_c, \"QuizEntry\");","map":{"version":3,"names":["React","Button","Form","Input","message","Space","useNavigate","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","QuizEntry","_s","location","navigate","form","useForm","onFinish","state","h1","list","onFinishFailed","error","children","className","width","style","margin","src","fileName","_jsxFileName","lineNumber","columnNumber","fontFamily","h2","layout","autoComplete","display","flexDirection","alignItems","Item","name","label","rules","required","type","min","textAlign","fontStyle","placeholder","htmlType","h3","_c","$RefreshReg$"],"sources":["/Users/sonuyadav/Desktop/monunewquiz/quiz/src/QuizEntry.js"],"sourcesContent":["import React from 'react'\nimport { Button, Form, Input, message, Space } from 'antd';\nimport { useNavigate } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nfunction QuizEntry() {\n\n    const location = useLocation();\n    const navigate = useNavigate()\n\n    const [form] = Form.useForm();\n\n    const onFinish = () => {\n        if (location.state.h1 === 'Best Friend') {\n            navigate('/quiz-entry/friends', { state: { list: 'QuestionsFriends' } })\n        }\n        if (location.state.h1 === 'Couple') {\n            navigate('/quiz-entry/couples', { state: { list: 'QuestionsCouple' } })\n        }\n    };\n\n    const onFinishFailed = () => {\n        message.error('Please enter name');\n    };\n    // console.log(\"helloworld\")\n\n    return (\n        <>\n            <div className='center'>\n                <img width={'40%'} style={{margin:'20px'}} src={location.state.src}></img>\n                <h3 style={{margin:'10px', fontFamily:'cursive'}}>{location.state.h1} Quiz</h3>\n                <h4 style={{margin:'10px', fontFamily:'cursive'}}>How well do your {location.state.h2} know you?</h4>\n            </div>\n            <Form\n                form={form}\n                layout=\"vertical\"\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                autoComplete=\"off\"\n                style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}\n            >\n                <Form.Item\n                    name=\"name\"\n                    label=\"What is your name?\"\n                    rules={[{ required: true }, { type: 'name' }, { type: 'string', min: 1 }]}\n                    style={{ width: '500px', textAlign: 'center', fontStyle:'inherit' }}\n                \n                >\n                    <Input placeholder=\"Enter your name\" style={{fontFamily: 'cursive'}}/>\n                </Form.Item>\n                <Form.Item>\n                    <Space>\n                        <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            style={{ width: '500px',fontFamily: 'cursive' }}>\n                            Get Started\n                        </Button>\n                    </Space>\n                </Form.Item>\n            </Form >\n            <div className='center' style={{ textAlign: 'start', width: '25%',fontFamily: 'cursive' }}>\n                <li>Create your own quiz</li>\n                <li>Share it with your {location.state.h2}</li>\n                <li>{location.state.h3}</li>\n            </div>\n        </>\n    );\n}\n\nexport default QuizEntry"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}